{% raw %}
if [ "$PS1" != "" -a "${STARTED_TMUX:-x}" = x -a "${SSH_TTY:-x}" != x ]
then
    STARTED_TMUX=1; export STARTED_TMUX
    sleep 1
    ( (tmux has-session -t $USER && tmux attach-session -t $USER) || (tmux new-session -s $USER) ) && exit 0
    echo "tmux failed to start"
fi
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git git-flow textmate ruby lighthouse)

plugins=(autojump colorize flask-script osx vundle)
# fpath=(/usr/local/share/zsh-completions $fpath)

source $ZSH/oh-my-zsh.sh
source /usr/local/bin/virtualenvwrapper.sh

# User configuration

export PATH=/usr/local/bin:/usr/local/sbin:$HOME/bin:$PATH
export EDITOR='vim'
export VIRTUAL_ENV_DISABLE_PROMPT=1
export VENV_PROMPT=''
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/src
export EDITOR=vim
export LC_CTYPE=UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export DISABLE_AUTO_TITLE='true'
export COPYFILE_DISABLE=1
export PERL_MB_OPT="--install_base \"/Users/vp/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/Users/vp/perl5"

local return_code="%(?..%{$fg[red]%}%? ↵%{$reset_color%})"
local time=$'%{$terminfo[bold]$fg[green]%}[%D{%Y-%m-%d %H:%M:%S}]%{$reset_color%}'
{% endraw %}
local letter='%{$terminfo[bold]$fg[magenta]{{ '%}' }}{{ hostname }}%{$reset_color{{ '%}' }}'
{% raw %}
local current_dir='%{$terminfo[bold]$fg[blue]%} %~%{$reset_color%}'
local git_branch='$(git_prompt_info)%{$reset_color%}'
local venv='$VENV_PROMPT'

TMOUT=1

TRAPALRM() {
    zle reset-prompt
}

PROMPT="╭─${time} ${letter} ${current_dir} ${git_branch} ${venv}
╰─$ "
RPS1="${return_code}"

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[yellow]%}‹"
ZSH_THEME_GIT_PROMPT_SUFFIX="› %{$reset_color%}"

ve() {
    typeset venv
    typeset git_dir
    git_dir=`git rev-parse --git-dir 2> /dev/null`
    if [[ $? == 0 ]]; then
        git_dir=`\cd $git_dir/..; pwd`
        venv=`basename $git_dir`
    else
        venv=`basename $PWD`
    fi
    if [[ -z "${VIRTUAL_ENV:t}" ]]; then
        if workon | grep -q "$venv"; then
            workon "$venv"
            VENV_PROMPT="($venv)"
        else
            echo -n "Create virtualenv $venv now? (yn) "
            read answer
            if [[ "$answer" == "y" ]]; then
                mkvirtualenv "$venv"
                VENV_PROMPT="($venv)"
            fi
        fi
    else
        deactivate
        VENV_PROMPT=""
    fi
}

mdc() {
    mkdir -p "$@" && cd "$@"
}

alias vim="stty stop '' -ixoff ; vim"

if [[ "$(uname -s)" == "Darwin" ]] then
    alias sed=gsed
fi

ttyctl -f
{% endraw %}
